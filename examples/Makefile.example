# Example Makefile showing cargo-runner integration

# Run test at current cursor position (requires FILE and LINE env vars)
.PHONY: test-at-cursor
test-at-cursor:
	@if [ -z "$(FILE)" ] || [ -z "$(LINE)" ]; then \
		echo "Usage: make test-at-cursor FILE=src/lib.rs LINE=42"; \
		exit 1; \
	fi
	@echo "🔍 Looking for runnable at $(FILE):$(LINE)..."
	@cmd=$$(CARGO_RUNNER_QUICK=1 cargo run --bin cargo-runner -- show "$(FILE):$(LINE)" 2>/dev/null); \
	if [ $$? -eq 0 ]; then \
		echo "🚀 Running: $$cmd"; \
		$$cmd; \
	else \
		echo "❌ No runnable found at $(FILE):$(LINE)"; \
	fi

# List all tests in a file
.PHONY: list-tests
list-tests:
	@if [ -z "$(FILE)" ]; then \
		echo "Usage: make list-tests FILE=src/lib.rs"; \
		exit 1; \
	fi
	@cargo run --bin cargo-runner -- show "$(FILE)" 2>/dev/null | grep -E "(Run test|Type: Test)"

# Run all tests in current directory
.PHONY: test-all
test-all:
	@for file in $$(find . -name "*.rs" -type f); do \
		if cargo run --bin cargo-runner -- show "$$file" 2>/dev/null | grep -q "Run test"; then \
			echo "📁 Found tests in $$file"; \
		fi; \
	done

# Example usage:
# make test-at-cursor FILE=src/parser/mod.rs LINE=45
# make list-tests FILE=examples/showcase.rs
# make test-all